# Generated by Django 4.2.16 on 2025-09-13 07:03

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='HazardReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('latitude', models.DecimalField(decimal_places=7, max_digits=10, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('longitude', models.DecimalField(decimal_places=7, max_digits=10, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('location_description', models.CharField(help_text='Human-readable location description', max_length=255)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('verified', 'Verified'), ('rejected', 'Rejected'), ('investigating', 'Under Investigation')], default='pending', max_length=15)),
                ('verified_at', models.DateTimeField(blank=True, null=True)),
                ('verification_notes', models.TextField(blank=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('confidence_score', models.DecimalField(decimal_places=2, default=0.5, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('weather_conditions', models.JSONField(default=dict, help_text='Weather data like wind speed, wave height, etc.')),
                ('social_media_mentions', models.PositiveIntegerField(default=0)),
                ('incident_datetime', models.DateTimeField(help_text='When the incident occurred')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'hazard_reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='HazardType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('code', models.CharField(max_length=20, unique=True)),
                ('description', models.TextField()),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('color', models.CharField(default='#FF0000', max_length=7)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'hazard_types',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ReportMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_type', models.CharField(choices=[('image', 'Image'), ('video', 'Video'), ('audio', 'Audio')], max_length=10)),
                ('file', models.FileField(upload_to='reports/%Y/%m/')),
                ('filename', models.CharField(max_length=255)),
                ('file_size', models.PositiveIntegerField()),
                ('width', models.PositiveIntegerField(blank=True, null=True)),
                ('height', models.PositiveIntegerField(blank=True, null=True)),
                ('duration', models.DurationField(blank=True, null=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='media_files', to='reports.hazardreport')),
            ],
            options={
                'db_table': 'report_media',
                'ordering': ['uploaded_at'],
            },
        ),
        migrations.CreateModel(
            name='ReportComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField()),
                ('is_internal', models.BooleanField(default=False, help_text='Internal comments only visible to officials')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='report_comments', to=settings.AUTH_USER_MODEL)),
                ('report', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='reports.hazardreport')),
            ],
            options={
                'db_table': 'report_comments',
                'ordering': ['created_at'],
            },
        ),
        migrations.AddField(
            model_name='hazardreport',
            name='hazard_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='reports.hazardtype'),
        ),
        migrations.AddField(
            model_name='hazardreport',
            name='reporter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='hazardreport',
            name='verified_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='verified_reports', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Hotspot',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('center_latitude', models.DecimalField(decimal_places=7, max_digits=10, validators=[django.core.validators.MinValueValidator(-90), django.core.validators.MaxValueValidator(90)])),
                ('center_longitude', models.DecimalField(decimal_places=7, max_digits=10, validators=[django.core.validators.MinValueValidator(-180), django.core.validators.MaxValueValidator(180)])),
                ('radius_km', models.DecimalField(decimal_places=2, max_digits=5)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('alert_level', models.CharField(choices=[('info', 'Information'), ('warning', 'Warning'), ('alert', 'Alert'), ('emergency', 'Emergency')], default='info', max_length=10)),
                ('confidence_score', models.DecimalField(decimal_places=2, max_digits=3, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])),
                ('report_count', models.PositiveIntegerField(default=0)),
                ('is_active', models.BooleanField(default=True)),
                ('detected_at', models.DateTimeField(auto_now_add=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('dominant_hazard_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='reports.hazardtype')),
                ('reports', models.ManyToManyField(related_name='hotspots', to='reports.hazardreport')),
            ],
            options={
                'db_table': 'hotspots',
                'ordering': ['-detected_at'],
                'indexes': [models.Index(fields=['center_latitude', 'center_longitude'], name='hotspots_center__547dcc_idx'), models.Index(fields=['alert_level', 'is_active'], name='hotspots_alert_l_26dc10_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='hazardreport',
            index=models.Index(fields=['latitude', 'longitude'], name='hazard_repo_latitud_5243d2_idx'),
        ),
        migrations.AddIndex(
            model_name='hazardreport',
            index=models.Index(fields=['status', 'severity'], name='hazard_repo_status_c45e1c_idx'),
        ),
        migrations.AddIndex(
            model_name='hazardreport',
            index=models.Index(fields=['incident_datetime'], name='hazard_repo_inciden_932520_idx'),
        ),
        migrations.AddIndex(
            model_name='hazardreport',
            index=models.Index(fields=['hazard_type', 'status'], name='hazard_repo_hazard__d3ed6e_idx'),
        ),
    ]
